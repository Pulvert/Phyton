{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMMrSi0ks5xQGl4KrJ1D6YV"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TBmA0lU_FpHl","executionInfo":{"status":"ok","timestamp":1720707512366,"user_tz":-120,"elapsed":22710,"user":{"displayName":"Diego","userId":"07408759357351876848"}},"outputId":"98a9bad1-3fb1-4af8-a728-65d356aefb1e"},"outputs":[{"output_type":"stream","name":"stdout","text":["SUNDAY\n","1-Crear pedido\n","2-Actualizar pedido\n","3-Consultar pedidos\n","4-Salir\n","Escriba opción: 4\n","MONDAY\n","WEDNESDAY\n","El estado del pedido 1 es PENDING\n","El pedido necesita ser enviado antes de entregarse.\n","El estado del pedido 1 es SHIPPED\n","El estado del pedido 1 es DELIVERED\n","El pedido no se puede cancelar ya que ya se ha entregado.\n"]}],"source":["\"\"\"\n"," * Empleando tu lenguaje, explora la definición del tipo de dato\n"," * que sirva para definir enumeraciones (Enum).\n"," * Crea un Enum que represente los días de la semana del lunes\n"," * al domingo, en ese orden. Con ese enumerado, crea una operación\n"," * que muestre el nombre del día de la semana dependiendo del número entero\n"," * utilizado (del 1 al 7).\n"," *\n"," * DIFICULTAD EXTRA (opcional):\n"," * Crea un pequeño sistema de gestión del estado de pedidos.\n"," * Implementa una clase que defina un pedido con las siguientes características:\n"," * - El pedido tiene un identificador y un estado.\n"," * - El estado es un Enum con estos valores: PENDIENTE, ENVIADO, ENTREGADO y CANCELADO.\n"," * - Implementa las funciones que sirvan para modificar el estado:\n"," *   - Pedido enviado\n"," *   - Pedido cancelado\n"," *   - Pedido entregado\n"," *   (Establece una lógica, por ejemplo, no se puede entregar si no se ha enviado, etc...)\n"," * - Implementa una función para mostrar un texto descriptivo según el estado actual.\n"," * - Crea diferentes pedidos y muestra cómo se interactúa con ellos.\n","\"\"\"\n","from enum import Enum\n","\n","class Week(Enum):\n","    MONDAY = 1\n","    TUESDAY = 2\n","    WEDNESDAY = 3\n","    THURSDAY = 4\n","    FRIDAY = 5\n","    SATURDAY = 6\n","    SUNDAY = 7\n","\n","def day (num):\n","  day_enum = Week(num)\n","  print(day_enum.name)\n","\n","day(7)\n","\n","# Extra\n","\n","class Order(Enum):\n","  PENDIENTE = 1\n","  ENVIADO = 2\n","  CANCELADO = 3\n","  ENTREGADO = 4\n","\n","orders = {}\n","\n","def new_stat():\n","  id = input(\"Nuevo pedido: Introduce id: \")\n","  status = int(input(\"Introduce estado(1-Pendiente, 2-Enviado, 3-Cancelado, 4-Entregado): \"))\n","\n","  orders[id] = Order(status).name\n","\n","def change_stat():\n","  id = input(\"Actualizar pedido: Introduce id: \")\n","  status = int(input(\"Introduce estado(1-Pendiente, 2-Enviado, 3-Cancelado, 4-Entregado): \"))\n","\n","  if orders[id] == \"CANCELADO\":\n","    print(\"Este pedido está cancelado\")\n","\n","  elif orders[id] == \"ENTREGADO\":\n","    print(\"Este pedido ya está entregado\")\n","\n","  elif orders[id] == \"PENDIENTE\" and status == 4:\n","    print(\"No se puede entregar un paquete que no se ha enviado\")\n","\n","  else:\n","    orders[id] = Order(status).name\n","\n","def consult_orders():\n","  print(\"  ID ---- STATUS\")\n","  for key in orders.items():\n","    print(key)\n","\n","\n","print(\"1-Crear pedido\")\n","print(\"2-Actualizar pedido\")\n","print(\"3-Consultar pedidos\")\n","print(\"4-Salir\")\n","\n","while True:\n","\n","  option = input(\"Escriba opción: \")\n","\n","  if option == \"1\":\n","    new_stat ()\n","\n","  elif option == \"2\":\n","    change_stat()\n","\n","  elif option == \"3\":\n","    consult_orders()\n","\n","  elif option == \"4\":\n","    break\n","\n","\"\"\"\n","Ejercicio\n","\"\"\"\n","\n","class Weekday(Enum):\n","    MONDAY = 1\n","    TUESDAY = 2\n","    WEDNESDAY = 3\n","    THURSDAY = 4\n","    FRIDAY = 5\n","    SATURDAY = 6\n","    SUNDAY = 7\n","\n","def get_day(number: int):\n","    print(Weekday(number).name)\n","\n","get_day(1)\n","get_day(3)\n","\n","\"\"\"\n","Extra\n","\"\"\"\n","\n","class OrderStatus(Enum):\n","    PENDING = 1\n","    SHIPPED = 2\n","    DELIVERED = 3\n","    CANCELLED = 4\n","\n","class Order:\n","\n","    status = OrderStatus.PENDING\n","\n","    def __init__(self, id) -> None:\n","        self.id = id\n","\n","    def ship(self):\n","        if self.status == OrderStatus.PENDING:\n","            self.status = OrderStatus.SHIPPED\n","            self.display_status()\n","        else:\n","            print(\"El pedido ya ha sido enviado o cancelado\")\n","\n","    def deliver(self):\n","        if self.status == OrderStatus.SHIPPED:\n","            self.status = OrderStatus.DELIVERED\n","            self.display_status()\n","        else:\n","            print(\"El pedido necesita ser enviado antes de entregarse.\")\n","\n","    def cancel(self):\n","        if self.status != OrderStatus.DELIVERED:\n","            self.status = OrderStatus.CANCELLED\n","            self.display_status()\n","        else:\n","            print(\"El pedido no se puede cancelar ya que ya se ha entregado.\")\n","\n","    def display_status(self):\n","        print(f\"El estado del pedido {self.id} es {self.status.name}\")\n","\n","\n","order_1 = Order(1)\n","order_1.display_status()\n","order_1.deliver()\n","order_1.ship()\n","order_1.deliver()\n","order_1.cancel()"]}]}